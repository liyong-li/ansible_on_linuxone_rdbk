---
# tasks file for configure-haproxy
- name: unmanage resolve.conf in NetworkManager
  lineinfile:
    line: dns=none
    dest: /etc/NetworkManager/NetworkManager.conf
    insertafter: "\\[main\\].*"
    regexp: "^dns=.*"

- name: use local dns in resolv.conf
  blockinfile:
    dest: /etc/resolv.conf
    insertbefore: BOF
    block: |
      search {{ cluster_domain_name }}
      nameserver {{ dns_nameserver }}  
- name: install haproxy
  yum:
    name:
      - haproxy
      - python3-libsemanage
    state: latest
  notify:
  - restart haproxy
  - restart firewalld

- name: create /etc/haproxy
  file:
    path: /etc/haproxy
    state: directory

- name: create /etc/haproxy/haproxy.cfg
  template:
    src: etc/haproxy/haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg

- name: allow http traffic
  firewalld:
    service: http
    permanent: yes
    zone: public
    state: enabled

- name: allow http traffic
  firewalld:
    service: http
    permanent: yes
    zone: internal
    state: enabled

- name: allow https traffic
  firewalld:
    service: https
    permanent: yes
    zone: public
    state: enabled

- name: allow https traffic
  firewalld:
    service: https
    permanent: yes
    zone: internal
    state: enabled

- name: allow traffic at port 1936
  firewalld:
    port: 1936/tcp
    permanent: yes
    zone: "{{ item }}"
    state: enabled
  with_items:
  - internal
  - public

- name: allow traffic at port 443
  firewalld:
    port: 443/tcp
    permanent: yes
    zone: "{{ item }}"
    state: enabled
  with_items:
  - internal
  - public

- name: allow traffic at port 6443
  firewalld:
    port: 6443/tcp
    permanent: yes
    zone: "{{ item }}"
    state: enabled
  with_items:
  - internal
  - public

- name: allow traffic at port 22623
  firewalld:
    port: 22623/tcp
    permanent: yes
    zone: "{{ item }}"
    state: enabled
  with_items:
  - internal
  - public
- name: selinux
  become: yes
  become_user: root
  shell: setsebool -P haproxy_connect_any=1

#- name: turn on haproxy_connect_any
#  seboolean:
#    name: haproxy_connect_any
#    state: yes
#    persistent: yes

- name: restart haproxy
  service:
    name: haproxy.service
    state: restarted
    enabled: true

- name: Restart firewalld.service
  service:
    name: firewalld.service
    state: restarted
    enabled: true

